name: libplctag4j CI

on:
  push:
    branches: [ release, prerelease ]
  pull_request:
    branches: [ release, prerelease ]

jobs:

  ubuntu:
    name: Generate artifacts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle clean jar minJar

    - name: Test Release JAR
      run: gradle test --stacktrace --info

    - name: Build Javadoc
      run: gradle javadoc

    - name: Get artifact name
      run: |
        ls ${{ github.workspace }}/build/libs/libplctag4j*
        export FULL_NAME=`ls ${{ github.workspace }}/build/libs/libplctag4j-*.jar | tail -n 1`
        echo "FULL_NAME=${FULL_NAME}"
        echo "::set-env name=FULL_NAME::${FULL_NAME}"
        export ARTIFACT_NAME=`basename -s .jar ${FULL_NAME}`
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}"
        echo "::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}"
        PARTS=($(echo "$ARTIFACT_NAME" | tr '-' "\n"))
        export VERSION="${PARTS[1]}-${PARTS[2]}"
        echo "VERSION=${VERSION}"
        echo "::set-env name=VERSION::${VERSION}"
        export FULL_NAME_MIN=`ls ${{ github.workspace }}/build/libs/libplctag4j_min-*.jar | tail -n 1`
        echo "FULL_NAME_MIN=${FULL_NAME_MIN}"
        echo "::set-env name=FULL_NAME_MIN::${FULL_NAME_MIN}"
        export ARTIFACT_NAME_MIN=`basename -s .jar ${FULL_NAME_MIN}`
        echo "ARTIFACT_NAME_MIN=${ARTIFACT_NAME_MIN}"
        echo "::set-env name=ARTIFACT_NAME_MIN::${ARTIFACT_NAME_MIN}"

    - name: Upload full JAR to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.FULL_NAME }}

    - name: Upload minimal JAR to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.FULL_NAME_MIN }}

    - name: Upload docs to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ github.workspace }}/build/docs

    - name: Show artifact name
      run: |
        ls ${{ github.workspace }}/build/libs
        if [ -e ${{ env.FULL_NAME }} ]; then echo "Found it!"; else echo "Not found!"; fi

    - name: Upload JAR to Bintray
      uses: hpcsc/upload-bintray-docker-action@v1
      with:
        repository: libplctag4j
        package: libplctag4j
        version: ${{ env.VERSION }}
        sourcePath: ./build/libs/libplctag4j-*.jar
        username: kyle-github
        apiKey: ${{secrets.BINTRAY_API_KEY}}

  macos-test:
    name: macOS Test
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle clean jar

    - name: Test Release JAR
      run: gradle test --stacktrace --info

  windows-test:
    name: Windows Test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle clean jar

    - name: Test Release JAR
      run: gradle test --stacktrace --info


name: libplctag4j CI

on:
  push:
    branches: [ release, prerelease, android-jar ]
  pull_request:
    branches: [ release, prerelease, android-jar ]

jobs:


  ubuntu-test:
    name: Ubuntu Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle libplctag4j-jar:jar

    - name: Test Release JAR
      run: gradle libplctag4j-jar:test --stacktrace --info

  macos-test:
    name: macOS Test
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle libplctag4j-jar:jar

    - name: Test Release JAR
      run: gradle libplctag4j-jar:test --stacktrace --info

  windows-test:
    name: Windows Test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle libplctag4j-jar:jar

    - name: Test Release JAR
      run: gradle libplctag4j-jar:test --stacktrace --info

  generate-artifacts:
    needs: [ ubuntu-test, windows-test, macos-test ]
    name: Generate artifacts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JARs
      run: gradle clean libplctag4j-jar:jar libplctag4j-jar:minJar libplctag4j-aar:assembleRelease

    - name: Build Javadoc
      run: gradle libplctag4j-jar:javadoc

    - name: Get artifact name
      run: |
        # get main JAR artifact full path and file name.
        export FULL_NAME=`ls ${{ github.workspace }}/libplctag4j-jar/build/libs/libplctag-*.jar | tail -n 1`
        echo "FULL_NAME=${FULL_NAME}"
        echo "::set-env name=FULL_NAME::${FULL_NAME}"
        export ARTIFACT_NAME=`basename -s .jar ${FULL_NAME}`
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}"
        echo "::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}"
        # get version number from artifact name
        PARTS=($(echo "$ARTIFACT_NAME" | tr '-' "\n"))
        export VERSION="${PARTS[1]}-${PARTS[2]}"
        echo "VERSION=${VERSION}"
        echo "::set-env name=VERSION::${VERSION}"
        # get POM info
        export POM_NAME=`ls ${{ github.workspace }}/libplctag4j-jar/build/libs/libplctag-*.pom | tail -n 1`
        echo "POM_NAME=${POM_NAME}"
        echo "::set-env name=POM_NAME::${POM_NAME}"
        export POM_ARTIFACT_NAME=`basename -s .pom ${POM_NAME}`
        echo "POM_ARTIFACT_NAME=${POM_ARTIFACT_NAME}"
        echo "::set-env name=POM_ARTIFACT_NAME::${POM_ARTIFACT_NAME}"
        # get AAR info
        export AAR_FULL_NAME=`ls ${{ github.workspace }}/libplctag4j-aar/build/outputs/aar/libplctag-*.aar | tail -n 1`
        echo "AAR_FULL_NAME=${AAR_FULL_NAME}"
        echo "::set-env name=AAR_FULL_NAME::${AAR_FULL_NAME}"
        export AAR_ARTIFACT_NAME=`basename -s .aar ${AAR_FULL_NAME}`
        echo "::set-env name=AAR_ARTIFACT_NAME::${AAR_ARTIFACT_NAME}"

    - name: Upload full JAR to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.FULL_NAME }}

    - name: Upload docs to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ github.workspace }}/build/docs

    - name: Upload full JAR to Bintray
      run: |
        if [ -e ${{ env.FULL_NAME }} ]; then
          echo "Uploading full JAR file."
          echo "curl -T ${{ env.FULL_NAME }} -ukyle-github:${{secrets.BINTRAY_API_KEY}} https://api.bintray.com/content/kyle-github/libplctag4j/com.github.libplctag/${{ env.VERSION }}/com.github.libplctag-${{ env.VERSION }}.jar?publish=1&override=1"
          curl -T ${{ env.FULL_NAME }} -ukyle-github:${{secrets.BINTRAY_API_KEY}} https://api.bintray.com/content/kyle-github/libplctag4j/com.github.libplctag/${{ env.VERSION }}/com.github.libplctag-${{ env.VERSION }}.jar?publish=1&override=1
        else
          echo "Full JAR file not found!"
        fi

    - name: Upload POM to Bintray
      run: |
        if [ -e ${{ env.POM_NAME }} ]; then
          echo "Uploading full JAR file."
          echo "curl -T ${{ env.POM_NAME }} -ukyle-github:${{secrets.BINTRAY_API_KEY}} https://api.bintray.com/content/kyle-github/libplctag4j/com.github.libplctag/${{ env.VERSION }}/com.github.libplctag-${{ env.VERSION }}.pom?publish=1&override=1"
          curl -T ${{ env.POM_NAME }} -ukyle-github:${{secrets.BINTRAY_API_KEY}} https://api.bintray.com/content/kyle-github/libplctag4j/com.github.libplctag/${{ env.VERSION }}/com.github.libplctag-${{ env.VERSION }}.pom?publish=1&override=1
        else
          echo "Full JAR file not found!"
        fi

    - name: Upload Android AAR to Bintray
      run: |
        if [ -e ${{ env.AAR_FULL_NAME }} ]; then
          echo "Uploading Android AAR file."
          echo "curl -T ${{ env.AAR_FULL_NAME }} -ukyle-github:${{secrets.BINTRAY_API_KEY}} https://api.bintray.com/content/kyle-github/libplctag4j/com.github.libplctag/${{ env.VERSION }}/com.github.libplctag-${{ env.VERSION }}.aar?publish=1&override=1"
          curl -T ${{ env.AAR_FULL_NAME }} -ukyle-github:${{secrets.BINTRAY_API_KEY}} https://api.bintray.com/content/kyle-github/libplctag4j/com.github.libplctag/${{ env.VERSION }}/com.github.libplctag-${{ env.VERSION }}.aar?publish=1&override=1
        else
          echo "Android AAR file not found!"
        fi
